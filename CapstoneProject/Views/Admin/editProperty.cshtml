@model CapstoneProject.Models.propertyDetail

@{
    ViewBag.Title = "editProperty";
}


@*<h2 style="text-align:center">Edit Property</h2>
<hr />*@

<div class="container-fluid">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row" style="justify-content: center !important; display: flex">
            <div class="container col-md-8" style="float:none;margin:auto">
                @*<h3 style="text-align:center">Property Details</h3>*@

                <div class="card" style="padding: 30px 40px; margin-top: 20px; margin-bottom: 20px; border: none !important; box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;">

                    <form class="form-card">
                        <div class="row">
                            <div class="col-md-12">
                                <h3 style="text-align: center; font-family: 'Poppins', sans-serif;">Edit Property Details</h3>
                                <p style="text-align:center">Please complete the requirements below to update details of your listed property</p>
                                <hr style="border: 1.5px dashed black" />
                            </div>
                        </div>
                        <div class="form-horizontal" style="text-align:center">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.HiddenFor(model => model.propertyID, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.HiddenFor(model => model.propertyID, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.propertyID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-8" style="float:none;margin:auto">
                                <div class="form-group">
                                    @Html.HiddenFor(model => model.adminID, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.HiddenFor(model => model.adminID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.adminID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-8" style="float:none;margin:auto">
                                <div class="form-group">
                                    @Html.HiddenFor(model => model.adminName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.HiddenFor(model => model.adminName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.adminName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-8" style="float:none;margin:auto">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.propertyName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.propertyName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.propertyName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-8" style="float:none;margin:auto">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-8" style="float:none;margin:auto">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-8" style="float:none;margin:auto">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-8" style="float:none;margin:auto">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.imageName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.imageName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.imageName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-8" style="float:none;margin:auto">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <input type="submit" value="Save" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>


                    </form>

                </div>
                <div>
                    @Html.ActionLink("My Properties", "viewProperty", "Admin", new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
    }
</div>







@*<h2>editProperty</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>propertyDetail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(model => model.propertyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.propertyID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.propertyID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.adminID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.adminID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adminID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.adminName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.adminName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adminName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.propertyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.propertyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.propertyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imageName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imageName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imageName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
